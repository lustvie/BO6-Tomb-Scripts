/*
______________________________________________________________________________________________________                        
      .---.        ___    _  ,---.  ,---. .-./`)      _______    .-./`)   ______          .-''-.   
      | ,_|      .'   |  | | |   /  |   | \ .-.')    /   __  \   \ .-.') |    _ `''.    .'_ _   \  
    ,-./  )      |   .'  | | |  |   |  .' / `-' \   | ,_/  \__)  / `-' \ | _ | ) _  \  / ( ` )   ' 
    \  '_ '`)    .'  '_  | | |  | _ |  |   `-'`"` ,-./  )         `-'`"` |( ''_'  ) | . (_ o _)  | 
     > (_)  )    '   ( \.-.| |  _( )_  |   .---.  \  '_ '`)       .---.  | . (_) `. | |  (_,_)___| 
    (  .  .-'    ' (`. _` /| \ (_ o._) /   |   |   > (_)  )  __   |   |  |(_    ._) ' '  \   .---. 
     `-'`-'|___  | (_ (_) _)  \ (_,_) /    |   |  (  .  .-'_/  )  |   |  |  (_.\.' /   \  `-'    / 
      |        \  \ /  . \ /   \     /     |   |   `-'`-'     /   |   |  |       .'     \       /  
      `--------`   ``-'`-''     `---`      '---'     `._____.'    '---'  '-----'`        `'-..-'   
______________________________________________________________________________________________________

--------------------------------------[ REQUIREMENTS ]-----------------------------------------------
- DPAD UP to start / stop
- Equip Vulture’s Aid augment: Parting Gift, Condor’s Reach
- Equip Speed Cola: Classic Formula
- Equip Jug: Turtle Shell, Durable Plates
- Equip Quick Revive: Dying Wish
- Equip Elemental Pop: Electric Cherry
- Equip Mister Peeks: Apex Predator, Party Animal
- Golden Armor
- Upgraded Ice Staff
- Apply Armor needs to be set to “Apply One” in settings
- All binds for this script are Default

--------------------------------------[ INSTRUCTIONS ]-----------------------------------------------
- Go to Stamin-Up on the tomb
- Stand hugging the pillar to the right of Stamin-Up
- Look down, facing the wall and activate the script with DPAD UP
- Setup video: https://www.youtube.com/watch?v=9w9v4qSpKRA

--------------------------------------[ FAIL SAFE / SAVE QUIT ]--------------------------------------
Fail Safe Feature (Xbox Only)
This script includes a fail-safe feature that should work on Xbox (not tested on PS4/PS5).
It uses the vibration from the reload animation of the 9mm pistol while you’re in a downed
state to trigger the fail-safe. When activated, it will automatically self-revive, use a
Mutant Injection, and save & quit the game.

Because this relies on controller vibration, make sure you have:
  - Vibration enabled and set to 100% in controller settings
  - Self Revive available
  - Mutant Injection equipped

PSA:
Test this feature first. It worked reliably for me using (gamesir g7 se controller), but I haven’t
had anyone else test it yet. If it doesn’t work on your setup, I’d recommend just leaving it off. 
This was added as an optional feature for those who might find it useful.

--------------------------------------[ CONTROLS ]---------------------------------------------------
By default, this uses the standard button layout. However, it supports custom button layouts.
To use a custom setup, put YOUR binds for these actions in this format:
  define ACTION = XB1_xxx

Use this index of identifiers for your buttons:
----------------------------------------------------------------------------------------------
XB1_XBOX    =   Xbox button
XB1_VIEW    =   View button (left of Xbox button)
XB1_MENU    =   Menu button (right of Xbox button)
XB1_RB      =   Right bumper
XB1_RT      =   Right trigger
XB1_RS      =   Right stick (click)
XB1_LB      =   Left bumper
XB1_LT      =   Left trigger
XB1_LS      =   Left stick (click)
XB1_RX      =   Right stick x-axis (left/right)
XB1_RY      =   Right stick y-axis (up/down)
XB1_LX      =   Left stick x-axis (left/right)
XB1_LY      =   Left stick y-axis (up/down)
XB1_UP      =   D-pad up button
XB1_DOWN    =   D-pad down button
XB1_LEFT    =   D-pad left button
XB1_RIGHT   =   D-pad right button
XB1_Y       =   Y (Yellow) button
XB1_B       =   B (Red) button
XB1_A       =   A (Green) button
XB1_X       =   X (Blue) button
----------------------------------------------------------------------------------------------
*/

define FIRE     = XB1_RT                  
define ARMOR    = XB1_Y
define RELOAD   = XB1_X
define TACTICAL = XB1_LB
define LETHAL   = XB1_RB

/*
----------------------------------------------------------------------------------------------
*/

int start;

main {
    if (event_press(XB1_UP)) {
        start = !start;
    }

    if (start) {
        combo_run(Main);
        combo_run(Movement); 
     
            if (get_rumble(RUMBLE_A) == 8 && get_rumble(RUMBLE_B) == 11 && 
            get_rumble(RUMBLE_RT) == 0 && get_rumble(RUMBLE_LT) == 0) { 
            start = FALSE;
                combo_stop(Main);
                combo_stop(Movement);
                combo_run(FailSafe);                                                                                             
            }

    } else {
        combo_stop(Main);
        combo_stop(Movement);
    }
}

combo Main {  
    /* Apply Armour */
    set_val(ARMOR, 100);    
    wait(600);              
    set_val(ARMOR, 0);      
    
    wait(150);              

    /* Ice charge shot */
    set_val(FIRE, 100);     
    wait(2500);             
    set_val(FIRE, 0);     

    wait(1000); 

    /* Reload */
    set_val(RELOAD, 100);   
    wait(50);               
    set_val(RELOAD, 0);     

    wait(2000);             

    /* Field Upgrade */
    set_val(LETHAL, 100);   
    set_val(TACTICAL, 100); 
    wait(100)
}

combo Movement {
    /* Move forward and left */
    set_val(XB1_LY, -100);  
    set_val(XB1_LX, -100);  
    wait(250);              

    /* Move forward and right */
    set_val(XB1_LY, -100); 
    set_val(XB1_LX, 100);   
    wait(600);              
}

combo SelfRevive {
    set_val(XB1_Y, 100); 
    wait(4000); 
    set_val(XB1_Y, 0);
}

combo SpamMutant {
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
    set_val(XB1_DOWN, 100); wait(150);  set_val(XB1_DOWN, 0);   wait(150);
}

combo FailSafe {
    combo_run(SelfRevive);
    combo_run(SpamMutant);
    wait(4800);

    set_val(XB1_MENU, 100);	wait(50);   set_val(XB1_MENU, 0);	wait(300); 	/* Pause Game */     
    set_val(XB1_B, 100);	wait(50);   set_val(XB1_B, 0);      			/* Close Pause Menu */
    set_val(XB1_B, 100);	wait(50);   set_val(XB1_B, 0);      			/* Close Pause Menu */
    set_val(XB1_B, 100);	wait(50);   set_val(XB1_B, 0);      			/* Close Pause Menu */
        
    set_val(XB1_MENU, 100);	wait(50);   set_val(XB1_MENU, 0);	wait(300); 	/* Pause Game */     
    set_val(XB1_B, 100);	wait(50);   set_val(XB1_B, 0);      			/* Close Pause Menu */
    set_val(XB1_B, 100);	wait(50);   set_val(XB1_B, 0);      			/* Close Pause Menu */
    set_val(XB1_B, 100);	wait(50);   set_val(XB1_B, 0);      			/* Close Pause Menu */  			

    set_val(XB1_MENU, 100);	wait(50);   set_val(XB1_MENU, 0);	wait(3000); /* Pause Game */ 

   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(200);  /* Navigates to Save Quit */
   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(200);  /* Navigates to Save Quit */
   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(200);  /* Navigates to Save Quit */
   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(200);  /* Navigates to Save Quit */
   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(200);  /* Navigates to Save Quit */
   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(200);  /* Navigates to Save Quit */

   set_val(XB1_A, 100);	    wait(100);  set_val(XB1_A, 0);      wait(500);  /* Save Quit */
   set_val(XB1_DOWN, 100);	wait(100);  set_val(XB1_DOWN, 0);   wait(500);  /* Nav to Save Quit */
   set_val(XB1_A, 100);	    wait(100);  set_val(XB1_A, 0);      wait(500);  /* Confirm Save Quit */
} ����������������